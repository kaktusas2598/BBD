Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
                              ds18b20.o (__mulqi3)
/usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
                              main.o (__udivmodqi4)
/usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o (exit)
/usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

lastDecimalTemp     0x2               main.o
lastWholeTemp       0x1               main.o

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 .text          0x0000000000000000        0x0 uart.o
 .data          0x0000000000000000        0x0 uart.o
 .bss           0x0000000000000000        0x0 uart.o
 .text.uart_peek
                0x0000000000000000       0x28 uart.o
 .text.uart_puts
                0x0000000000000000       0x16 uart.o
 .text.uart_puts_p
                0x0000000000000000       0x1c uart.o
 .text.uart_available
                0x0000000000000000       0x16 uart.o
 .text.uart_flush
                0x0000000000000000        0xa uart.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text          0x0000000000000000        0x0 ds18b20.o
 .data          0x0000000000000000        0x0 ds18b20.o
 .bss           0x0000000000000000        0x0 ds18b20.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
LOAD uart.o
LOAD main.o
LOAD ds18b20.o
START GROUP
LOAD /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/libm.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/libc.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/libattiny2313.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x3b2
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x10 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_clear_bss.o)
                0x000000000000002e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000003e        0x4 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000042        0x2 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o
                0x0000000000000042                __vector_1
                0x0000000000000042                __vector_12
                0x0000000000000042                __bad_interrupt
                0x0000000000000042                __vector_6
                0x0000000000000042                __vector_3
                0x0000000000000042                __vector_11
                0x0000000000000042                __vector_13
                0x0000000000000042                __vector_17
                0x0000000000000042                __vector_5
                0x0000000000000042                __vector_4
                0x0000000000000042                __vector_9
                0x0000000000000042                __vector_2
                0x0000000000000042                __vector_15
                0x0000000000000042                __vector_14
                0x0000000000000042                __vector_10
                0x0000000000000042                __vector_16
                0x0000000000000042                __vector_18
                0x0000000000000044                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_7
                0x0000000000000044       0x66 uart.o
                0x0000000000000044                __vector_7
 .text.__vector_8
                0x00000000000000aa       0x4e uart.o
                0x00000000000000aa                __vector_8
 .text.uart_init
                0x00000000000000f8       0x20 uart.o
                0x00000000000000f8                uart_init
 .text.uart_getc
                0x0000000000000118       0x3a uart.o
                0x0000000000000118                uart_getc
 .text.uart_putc
                0x0000000000000152       0x2a uart.o
                0x0000000000000152                uart_putc
 .text.startup.main
                0x000000000000017c       0xe4 main.o
                0x000000000000017c                main
 .text.ds18b20_reset
                0x0000000000000260       0x28 ds18b20.o
                0x0000000000000260                ds18b20_reset
 .text.ds18b20_writebit
                0x0000000000000288       0x1a ds18b20.o
                0x0000000000000288                ds18b20_writebit
 .text.ds18b20_readbit
                0x00000000000002a2       0x20 ds18b20.o
                0x00000000000002a2                ds18b20_readbit
 .text.ds18b20_writebyte
                0x00000000000002c2       0x1c ds18b20.o
                0x00000000000002c2                ds18b20_writebyte
 .text.ds18b20_readbyte
                0x00000000000002de       0x22 ds18b20.o
                0x00000000000002de                ds18b20_readbyte
 .text.ds18b20_gettemp
                0x0000000000000300       0x5c ds18b20.o
                0x0000000000000300                ds18b20_gettemp
 .text.libgcc.mul
                0x000000000000035c       0x12 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_mulqi3.o)
                0x000000000000035c                __mulqi3
 .text.libgcc.div
                0x000000000000036e       0x18 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodqi4.o)
                0x000000000000036e                __udivmodqi4
 .text.libgcc.div
                0x0000000000000386       0x28 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_udivmodhi4.o)
                0x0000000000000386                __udivmodhi4
                0x00000000000003ae                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000003ae        0x0 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
                0x00000000000003ae                exit
                0x00000000000003ae                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000003ae        0x4 /usr/lib/gcc/avr/5.3.0/avr25/tiny-stack/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000003b2                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000003b2
                [!provide]                        PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                [!provide]                        PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x28
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.UART_LastRxError
                0x0000000000800060        0x1 uart.o
 .bss.UART_RxTail
                0x0000000000800061        0x1 uart.o
 .bss.UART_RxHead
                0x0000000000800062        0x1 uart.o
 .bss.UART_TxTail
                0x0000000000800063        0x1 uart.o
 .bss.UART_TxHead
                0x0000000000800064        0x1 uart.o
 .bss.UART_RxBuf
                0x0000000000800065       0x10 uart.o
 .bss.UART_TxBuf
                0x0000000000800075       0x10 uart.o
 *(COMMON)
 COMMON         0x0000000000800085        0x3 main.o
                0x0000000000800085                lastDecimalTemp
                0x0000000000800087                lastWholeTemp
                0x0000000000800088                PROVIDE (__bss_end, .)
                0x00000000000003b2                __data_load_start = LOADADDR (.data)
                0x00000000000003b2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800088        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800088                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1584
 *(.stab)
 .stab          0x0000000000000000      0x900 uart.o
                                        0xb10 (size before relaxing)
 .stab          0x0000000000000900      0x510 main.o
                                        0x6d8 (size before relaxing)
 .stab          0x0000000000000e10      0x774 ds18b20.o
                                        0x93c (size before relaxing)

.stabstr        0x0000000000000000     0x10da
 *(.stabstr)
 .stabstr       0x0000000000000000     0x10da uart.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 main.o
 .comment       0x0000000000000011       0x12 ds18b20.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x40e
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x40e /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.debug_abbrev   0x0000000000000000      0x3d7
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x3d7 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x166
 *(.debug_str)
 .debug_str     0x0000000000000000      0x166 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr25/tiny-stack/crtattiny2313.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(RS485_Thermometer.elf elf32-avr)
LOAD linker stubs
