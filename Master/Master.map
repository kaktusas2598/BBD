Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o (exit)
/usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)
/usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
                              main.o (malloc)
/usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
                              /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o) (__do_copy_data)

Allocating common symbols
Common symbol       size              file

__brkval            0x2               /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
__flp               0x2               /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)

Discarded input sections

 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
 .text          0x0000000000000000        0x0 uart.o
 .data          0x0000000000000000        0x0 uart.o
 .bss           0x0000000000000000        0x0 uart.o
 .text.uart0_peek
                0x0000000000000000       0x34 uart.o
 .text.uart0_puts
                0x0000000000000000       0x18 uart.o
 .text.uart0_puts_p
                0x0000000000000000       0x1e uart.o
 .text.uart0_available
                0x0000000000000000       0x16 uart.o
 .text.uart0_flush
                0x0000000000000000        0xa uart.o
 .text.uart1_peek
                0x0000000000000000       0x34 uart.o
 .text.uart1_puts
                0x0000000000000000       0x18 uart.o
 .text.uart1_puts_p
                0x0000000000000000       0x1e uart.o
 .text.uart1_available
                0x0000000000000000       0x16 uart.o
 .text.uart1_flush
                0x0000000000000000        0xa uart.o
 .text          0x0000000000000000        0x0 main.o
 .data          0x0000000000000000        0x0 main.o
 .bss           0x0000000000000000        0x0 main.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
LOAD uart.o
LOAD main.o
START GROUP
LOAD /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libatmega324a.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x6c6
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *(.progmem*)
                0x000000000000007c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
                0x000000000000007c                __ctors_end = .
                0x000000000000007c                __dtors_start = .
 *(.dtors)
                0x000000000000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007c        0x0 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
                0x000000000000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007c        0xc /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000088       0x10 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000088                __do_clear_bss
 .init4         0x0000000000000098       0x16 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ae        0x8 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x4 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_19
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_27
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_26
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
                0x00000000000000ba                . = ALIGN (0x2)
 *(.text.*)
 .text.__vector_20
                0x00000000000000ba       0x6a uart.o
                0x00000000000000ba                __vector_20
 .text.__vector_21
                0x0000000000000124       0x58 uart.o
                0x0000000000000124                __vector_21
 .text.uart0_init
                0x000000000000017c       0x28 uart.o
                0x000000000000017c                uart0_init
 .text.uart0_getc
                0x00000000000001a4       0x3a uart.o
                0x00000000000001a4                uart0_getc
 .text.uart0_putc
                0x00000000000001de       0x32 uart.o
                0x00000000000001de                uart0_putc
 .text.__vector_28
                0x0000000000000210       0x6a uart.o
                0x0000000000000210                __vector_28
 .text.__vector_29
                0x000000000000027a       0x58 uart.o
                0x000000000000027a                __vector_29
 .text.uart1_init
                0x00000000000002d2       0x28 uart.o
                0x00000000000002d2                uart1_init
 .text.uart1_getc
                0x00000000000002fa       0x3a uart.o
                0x00000000000002fa                uart1_getc
 .text.uart1_putc
                0x0000000000000334       0x32 uart.o
                0x0000000000000334                uart1_putc
 .text.startup.main
                0x0000000000000366       0xe6 main.o
                0x0000000000000366                main
 .text.__vector_30
                0x000000000000044c       0x1e main.o
                0x000000000000044c                __vector_30
 .text.__vector_22
                0x000000000000046a       0x16 main.o
                0x000000000000046a                __vector_22
 .text.avr-libc
                0x0000000000000480      0x242 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000000480                malloc
                0x00000000000005b0                free
                0x00000000000006c2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000006c2        0x0 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
                0x00000000000006c2                exit
                0x00000000000006c2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000006c2        0x4 /usr/lib/gcc/avr/5.3.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000006c6                _etext = .

.data           0x0000000000800100        0x6 load address 0x00000000000006c6
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x6 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800100                __malloc_heap_end
                0x0000000000800102                __malloc_heap_start
                0x0000000000800104                __malloc_margin
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800106                . = ALIGN (0x2)
                0x0000000000800106                _edata = .
                0x0000000000800106                PROVIDE (__data_end, .)

.bss            0x0000000000800106       0x8e
                0x0000000000800106                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.UART1_LastRxError
                0x0000000000800106        0x1 uart.o
 .bss.UART1_RxTail
                0x0000000000800107        0x1 uart.o
 .bss.UART1_RxHead
                0x0000000000800108        0x1 uart.o
 .bss.UART1_TxTail
                0x0000000000800109        0x1 uart.o
 .bss.UART1_TxHead
                0x000000000080010a        0x1 uart.o
 .bss.UART1_RxBuf
                0x000000000080010b       0x20 uart.o
 .bss.UART1_TxBuf
                0x000000000080012b       0x20 uart.o
 .bss.UART_LastRxError
                0x000000000080014b        0x1 uart.o
 .bss.UART_RxTail
                0x000000000080014c        0x1 uart.o
 .bss.UART_RxHead
                0x000000000080014d        0x1 uart.o
 .bss.UART_TxTail
                0x000000000080014e        0x1 uart.o
 .bss.UART_TxHead
                0x000000000080014f        0x1 uart.o
 .bss.UART_RxBuf
                0x0000000000800150       0x20 uart.o
 .bss.UART_TxBuf
                0x0000000000800170       0x20 uart.o
 *(COMMON)
 COMMON         0x0000000000800190        0x4 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
                0x0000000000800190                __brkval
                0x0000000000800192                __flp
                0x0000000000800194                PROVIDE (__bss_end, .)
                0x00000000000006c6                __data_load_start = LOADADDR (.data)
                0x00000000000006cc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800194        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x0000000000800194                _end = .
                0x0000000000800194                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x13bc
 *(.stab)
 .stab          0x0000000000000000      0xd50 uart.o
                                       0x1170 (size before relaxing)
 .stab          0x0000000000000d50      0x66c main.o
                                        0x834 (size before relaxing)

.stabstr        0x0000000000000000     0x1198
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1198 uart.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x22
 *(.comment)
 .comment       0x0000000000000000       0x11 uart.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 main.o
 .comment       0x0000000000000011       0x11 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/libc.a(malloc.o)
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x6cc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x6cc /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o

.debug_abbrev   0x0000000000000000      0x66e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x66e /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x258
 *(.debug_str)
 .debug_str     0x0000000000000000      0x258 /usr/lib/gcc/avr/5.3.0/../../../../avr/lib/avr5/crtatmega324a.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(Master.elf elf32-avr)
LOAD linker stubs
